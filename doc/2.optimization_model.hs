Pandoc (Meta {unMeta = fromList [("author",MetaList [MetaInlines [Str "Dr.",Space,Str "Shuai",Space,Str "Wang"]]),("date",MetaInlines [Str "09/28/2019"]),("setupfile",MetaString "theme-bigblow.setup"),("title",MetaInlines [])]})
[Header 1 ("routing-bi-objective-routing-decomposition-bird",[],[]) [Str "Routing:",Space,Str "Bi-objective",Space,Str "Routing",Space,Str "Decomposition",Space,Str "(BiRD)"]
,Para [Str "Decomposing",Space,Str "the",Space,Str "routing",Space,Str "problem:"]
,OrderedList (1,DefaultStyle,DefaultDelim)
 [[Para [Str "single-school"]
  ,OrderedList (1,DefaultStyle,DefaultDelim)
   [[Plain [Str "stop",Space,Str "assignment"]]
   ,[Plain [Str "single-school",Space,Str "routing"]]]]
 ,[Para [Str "multi-school"]
  ,OrderedList (1,DefaultStyle,DefaultDelim)
   [[Plain [Str "scenario",Space,Str "selection"]]
   ,[Plain [Str "bus",Space,Str "scheduling"]]]]]
,Header 2 ("stop-assignment",[],[]) [Str "Stop",Space,Str "Assignment"]
,Header 3 ("setparameters",[],[]) [Str "Set/Parameters"]
,Table [] [AlignDefault,AlignDefault,AlignDefault] [0.0,0.0,0.0]
 [[Plain [Str "Identifier"]]
 ,[Plain [Str "Index/Set",Space,Str "Domain"]]
 ,[Plain [Str "Comment"]]]
 [[[Plain [Str "schools"]]
  ,[Plain [Str "S"]]
  ,[Plain [Str "set",Space,Str "of",Space,Str "schools"]]]
 ,[[Plain [Str "students"]]
  ,[Plain [Str "P"]]
  ,[Plain [Str "set",Space,Str "of",Space,Str "students"]]]
 ,[[Plain [Math InlineMath "P_s"]]
  ,[Plain [Math InlineMath "s \\in S"]]
  ,[Plain [Str "set",Space,Str "of",Space,Str "students",Space,Str "attending",Space,Str "school",Space,Str "s"]]]
 ,[[Plain [Str "Locations"]]
  ,[Plain [Str "C"]]
  ,[Plain [Str "set",Space,Str "of",Space,Str "all",Space,Str "locations",Space,Str "can",Space,Str "serve",Space,Str "as",Space,Str "bus",Space,Str "stops"]]]
 ,[[Plain [Math InlineMath "C_p"]]
  ,[Plain [Math InlineMath "C_p \\subseteq C"]]
  ,[Plain [Str "Allowed",Space,Str "bus",Space,Str "stops",Space,Str "for",Space,Str "student",Space,Math InlineMath "p \\in P_s"]]]
 ,[[Plain [Math InlineMath "d_{p,c}"]]
  ,[]
  ,[Plain [Str "walking",Space,Str "distance",Space,Str "for",Space,Str "student",Space,Str "p",Space,Str "to",Space,Str "a",Space,Str "stop",Space,Math InlineMath "c \\in C_p"]]]]
,Para [Str "For",Space,Str "student",Space,Str "p",Space,Str "with",Space,Str "special",Space,Str "needs",Space,Str "may",Space,Str "require",Space,Str "a",Space,Str "\"door-to-door\"",Space,Str "pickup:",SoftBreak,Str "the",Space,Str "set",Space,Math InlineMath "C_p",Space,Str "is",Space,Str "a",Space,Str "singleton",Space,Math InlineMath "{c}",Str ",",Space,Str "where",Space,Math InlineMath "d_{p,c} = 0",Str "."]
,Para [Str "The",Space,Str "objective",Space,Str "is",Space,Str "to",Space,Str "minimize",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "stops",Space,Str "for",Space,Str "each",Space,Str "schools",Space,Str "and",SoftBreak,Str "the",Space,Str "total",Space,Str "walking",Space,Str "distance.",Space,Str "This",Space,Str "is",Space,Str "similar",Space,Str "to",Space,Str "a",Space,Str "facility",Space,Str "location",SoftBreak,Str "problem."]
,Header 3 ("variable",[],[]) [Str "Variable"]
,Para [Math InlineMath "z_c",Str ":",Space,Str "binary",Space,Str "whether",Space,Str "stop",Space,Str "c",Space,Str "is",Space,Str "selected",Space,Str "for",Space,Str "school",Space,Str "S."]
,Para [Math InlineMath "y_{p,c}",Str ":",Space,Str "binary",Space,Str "whether",Space,Str "student",Space,Str "p",Space,Str "is",Space,Str "assigned",Space,Str "to",Space,Str "stop",Space,Str "c.\160"]
,Header 3 ("objective-and-constraints",[],[]) [Str "Objective",Space,Str "and",Space,Str "Constraints"]
,Para [Str "For",Space,Str "each",Space,Str "school",Space,Str "S,",Space,Str "minimize",Space,Str "the",Space,Str "total",Space,Str "number",Space,Str "of",Space,Str "stops",Space,Str "and",Space,Str "walking",Space,Str "distance:"]
,Para [Math DisplayMath " min \\sum_{c \\in C} z_c + \\beta \\sum_{p \\in P_s} \\sum_{c \\in C_p} d_{p,c} y_{p,c}"]
,Para [Str "subject",Space,Str "to:"]
,OrderedList (1,DefaultStyle,DefaultDelim)
 [[Para [Str "student",Space,Str "p",Space,Str "is",Space,Str "assigned",Space,Str "to",Space,Str "c",Space,Str "only",Space,Str "if",Space,Str "stop",Space,Str "c",Space,Str "is",Space,Str "selected",Space,Str "for",Space,Str "school",Space,Str "s.",SoftBreak,Math DisplayMath "y_{p,c} \\leq z_c,  \\forall p \\in P_s , c \\in C_p"]]
 ,[Para [Str "Each",Space,Str "student",Space,Str "is",Space,Str "assigned",Space,Str "to",Space,Str "1",Space,Str "stop",SoftBreak,Math DisplayMath "\\sum_{c \\in C_p} y_{p,c} = 1 ,\\forall p \\in P_s "]]]
,Para [Str "Where",Space,Math InlineMath "\\beta",Space,Str "is",Space,Str "the",Space,Str "trade-off",Space,Str "of",Space,Str "the",Space,Str "total",Space,Str "number",Space,Str "of",Space,Str "stops",Space,Str "and",Space,Str "walking",SoftBreak,Str "distance."]
,Header 2 ("single-school-routing",[],[]) [Str "Single",Space,Str "school",Space,Str "routing"]
,Para [Str "After",Space,Str "the",Space,Str "stop",Space,Str "assignment,",Space,Math InlineMath "C_s",Space,Str "is",Space,Str "the",Space,Str "set",Space,Str "of",Space,Str "bus",Space,Str "stops",Space,Str "which",Space,Str "serve",SoftBreak,Str "school",Space,Str "S.",SoftBreak,Math InlineMath "n_{c,S}",Space,Str "is",Space,Str "number",Space,Str "of",Space,Str "students",Space,Str "from",Space,Str "school",Space,Str "S",Space,Str "at",Space,Str "a",Space,Str "stop",Space,Str "c."]
,Header 3 ("bus",[],[]) [Str "Bus"]
,Table [] [AlignDefault,AlignDefault,AlignDefault] [0.0,0.0,0.0]
 [[Plain [Str "Identifier"]]
 ,[Plain [Str "index/set"]]
 ,[Plain [Str "comment"]]]
 [[[Plain [Str "Bus",Space,Str "Type"]]
  ,[Plain [Str "b/B"]]
  ,[]]
 ,[[Plain [Str "Capacity",Space,Math InlineMath "Q_b"]]
  ,[Plain [Str "b"]]
  ,[]]
 ,[[Plain [Str "Wheelchair",Space,Str "spots",Space,Math InlineMath "W_b"]]
  ,[Plain [Str "b"]]
  ,[Plain [Str "fixed",Space,Str "number",Space,Str "of",Space,Str "wheelchair"]]]
 ,[[Plain [Str "Bus",Space,Str "depot",Space,Math InlineMath "Y"]]
  ,[]
  ,[Plain [Strong [Str "stored",Space,Str "during",Space,Str "the",Space,Str "night",Space,Str "or",Space,Str "day???"]]]]]
,Header 3 ("trip",[],[]) [Str "Trip"]
,OrderedList (1,DefaultStyle,DefaultDelim)
 [[Para [Str "Time"]
  ,Table [] [AlignDefault,AlignDefault] [0.0,0.0]
   [[Plain [Str "Identifier"]]
   ,[Plain [Str "comment"]]]
   [[[Plain [Math InlineMath "t_{c,S}^{pick}"]]
    ,[Plain [Str "length",Space,Str "of",Space,Str "time",Space,Str "to",Space,Str "pick",Space,Str "all",Space,Str "p",Space,Str "for",Space,Str "S",Space,Str "at",Space,Str "c;",Space,Str "function",Space,Str "of",Space,Math InlineMath "n_{c,S}"]]]
   ,[[Plain [Math InlineMath "t_{S}^{drop}"]]
    ,[Plain [Str "length",Space,Str "of",Space,Str "time",Space,Str "to",Space,Str "drop",Space,Str "all",Space,Str "p",Space,Str "at",Space,Str "school",Space,Str "S;",Space,Str "fixed"]]]
   ,[[Plain [Math InlineMath "t_{l_1,l_2,\\tau}^{drive}"]]
    ,[Plain [Str "driving",Space,Str "time",Space,Str "from",Space,Math InlineMath "l_1",Space,Str "to",Space,Math InlineMath "l_2",Space,Math InlineMath "\\in S \\cup C \\cup Y",Space,Str "at",Space,Str "time",Space,Math InlineMath "\\tau"]]]
   ,[[Plain [Math InlineMath "\\tau_S"]]
    ,[Plain [Str "all",Space,Str "buses",Space,Str "must",Space,Str "arrive",Space,Str "at",Space,Str "school",Space,Str "S",Space,Str "at",Space,Math InlineMath "\\tau_S"]]]
   ,[[Plain [Math InlineMath "t_{S}^{drop}",Space,Str "+",Space,Math InlineMath "\\tau_S"]]
    ,[Plain [Str "bus",Space,Str "free",Space,Str "to",Space,Str "leave",Space,Str "at",Space,Str "this",Space,Str "time"]]]
   ,[[Plain [Math InlineMath "T^{max}"]]
    ,[Plain [Str "maximum",Space,Str "time",Space,Str "that",Space,Str "students",Space,Str "allowed",Space,Str "to",Space,Str "spend",Space,Str "on",Space,Str "the",Space,Str "bus"]]]]
  ,Para [Math InlineMath "t_{l_1,l_2,\\tau}^{drive}",Space,Str "are",Space,Str "deterministic",Space,Str "and",Space,Str "known,",Space,Str "and",Space,Str "usual",Space,Str "got",Space,Str "from",Space,Str "API",SoftBreak,Str "such",Space,Str "as",Space,Str "Google",Space,Str "Map.",Space,Str "Due",Space,Str "to",Space,Str "reality,",Space,Str "such",Space,Str "as",Space,Str "accident,",Space,Str "and",Space,Str "to",Space,Str "mitigate",Space,Str "the",Space,Str "impact",SoftBreak,Str "of",Space,Str "the",Space,Str "traffic,",Space,Str "the",Space,Str "drop-off",Space,Str "times",Space,Math InlineMath "t_{S}^{drop}",Space,Str "is",Space,Str "artificially",Space,Str "increase",Space,Str "to",SoftBreak,Str "say",Space,Str "10-15",Space,Str "minutes",Space,Str "even",Space,Str "it",Space,Str "only",Space,Str "takes",Space,Str "3",Space,Str "minutes."]]
 ,[Para [Str "Trip/Route"]
  ,Para [Str "A",Space,Str "trip/route",Space,Str "is",Space,Str "a",Space,Str "ordered",Space,Str "sequence",Space,Str "of",Space,Str "stops",Space,Str "visited",Space,Str "or",Space,Str "served,",Space,Str "by",Space,Str "a",Space,Str "bus.",SoftBreak,Str "For",Space,Str "school",Space,Str "S,",Space,Str "a",Space,Str "feasible",Space,Str "trip/route:"]
  ,OrderedList (1,DefaultStyle,DefaultDelim)
   [[Plain [Str "no",Space,Str "student",Space,Str "spends",Space,Str "more",Space,Str "than",Space,Math InlineMath "T^{Max}",Space,Str "between",Space,Str "pickup",Space,Str "and",Space,Str "drop-off."]]
   ,[Plain [Str "there",Space,Str "exists",Space,Str "a",Space,Str "type",Space,Str "of",Space,Str "bus",Space,Str "with",Space,Str "capacity",Space,Str "and",Space,Str "carry",Space,Str "all",Space,Str "students",Space,Str "assigned",Space,Str "to",SoftBreak,Str "the",Space,Str "stops",Space,Str "severed",Space,Str "by",Space,Str "the",Space,Str "trip."]]]
  ,Para [Str "Given",Space,Str "a",Space,Str "feasible",Space,Str "route",Space,Math InlineMath "R",Str ":"]
  ,BulletList
   [[Para [Math InlineMath "B_R \\subseteq B",Str ":",Space,Str "the",Space,Str "set",Space,Str "of",Space,Str "types",Space,Str "of",Space,Str "buses",Space,Str "that",Space,Str "have",Space,Str "the",Space,Str "necessary",Space,Str "capacity",Space,Str "to",Space,Str "serve",Space,Str "the",Space,Str "trip."]]
   ,[Para [Math InlineMath "T_R",Str ":",Space,Str "service",Space,Str "time",Space,Str "of",Space,Str "the",Space,Str "trip,",Space,Str "the",Space,Str "time",Space,Str "between",Space,Str "arrival",Space,Str "at",Space,Str "the",Space,Str "stop",Space,Str "to",Space,Str "the",Space,Str "final",Space,Str "school"]]
   ,[Para [Math InlineMath "T_S",Str ":",Space,Str "A",Space,Str "set",Space,Str "of",Space,Str "feasible",Space,Str "trips,",Space,Str "each",Space,Str "stops",Space,Math InlineMath "c \\in C_s",Space,Str "is",Space,Str "served",Space,Str "by",Space,Str "a",Space,Str "nonempty",SoftBreak,Str "set",Space,Str "of",Space,Str "feasible",Space,Str "trips",Space,Math InlineMath "T_c \\subset T_S",Str "."]
    ,Para [Str "For",Space,Str "example:",SoftBreak,Str "School",Space,Str "S",Space,Str "has",Space,Str "4",Space,Str "different",Space,Str "sets",Space,Str "of",Space,Str "feasible",Space,Str "trips,",Space,Str "stop",Space,Str "c4",Space,Str "can",Space,Str "be",Space,Str "served",Space,Str "by",Space,Str "two",SoftBreak,Str "differents",Space,Str "trips",Space,Str "3",Space,Str "and",Space,Str "5,",Space,Str "so",Space,Math InlineMath "T_c = {3,5}",Str "."]
    ,Para [Str "The",Space,Str "heuristic",Space,Str "returns",Space,Str "a",Space,Str "set",Space,Str "of",Space,Str "trips",Space,Str "T",Space,Str "what",Space,Str "covers",Space,Str "each",Space,Str "stop",Space,Strong [Strong [Str "exactly",Space,Str "once"]],Str ".",SoftBreak,Str "Then",Space,Str "we",Space,Str "run",Space,Str "it",Space,Str "N",Space,Str "times",Space,Str "to",Space,Str "build",Space,Str "a",Space,Str "set",Space,Str "of",Space,Str "feasible",Space,Str "trips",Space,Str "where",Space,Str "each",Space,Str "stop",Space,Str "is",SoftBreak,Str "covered",Space,Str "by",Space,Str "serveral",Space,Str "trips.",Space,Str "The",Space,Str "heuristic",Space,Str "returns",Space,Str "N",Space,Str "different",Space,Str "solutions",Space,Str "and",SoftBreak,Str "each",Space,Str "stop",Space,Str "will",Space,Str "be",Space,Str "covered",Space,Str "by",Space,Str "N",Space,Str "different",Space,Str "feasible",Space,Str "trips."]]]
  ,Para [Str "Trips",Space,Str "in",Space,Math InlineMath "T_S",Space,Str "indexed",Space,Str "by",Space,Math InlineMath "1,...,m_S",Str "."]
  ,Para [Str "For",Space,Str "given",Space,Str "set",Space,Str "of",Space,Str "trips",Space,Math InlineMath "T \\subseteq T_S",Str ":",Space,Math InlineMath "I(T)",Space,Str "is",Space,Str "the",Space,Str "subset",Space,Str "of",SoftBreak,Math InlineMath "\\{1,...,m_S\\}",Space,Str "corresponding",Space,Str "to",Space,Str "trips",Space,Str "in",Space,Str "T."]
  ,Para [Str "For",Space,Str "example:",SoftBreak,Str "School",Space,Str "S",Space,Str "has",Space,Str "4",Space,Str "different",Space,Str "set",Space,Str "of",Space,Str "feasible",Space,Str "trips,",Space,Str "with",Space,Str "25",Space,Str "different",Space,Str "trips",Space,Str "in",Space,Str "total.",SoftBreak,Str "Stop",Space,Str "c4",Space,Str "can",Space,Str "be",Space,Str "served",Space,Str "by",Space,Str "two",Space,Str "differents",Space,Str "trip",Space,Str "3",Space,Str "and",Space,Str "5,",Space,Str "so",Space,Math InlineMath "I(T_c) = I(T_4) = {3,5}\n\\subset {1,...25}"]]]
,Header 3 ("find-best-set-of-routes",[],[]) [Str "find",Space,Str "best",Space,Str "set",Space,Str "of",Space,Str "routes"]
,OrderedList (1,DefaultStyle,DefaultDelim)
 [[Para [Str "Variable"]
  ,Para [Math InlineMath "r_i",Str ":",Space,Str "binary",Space,Str "whether",Space,Str "trip",Space,Str "i",Space,Str "is",Space,Str "selected",Space,Math InlineMath "\\forall i \\in \\{1,...,m_S\\}"]]
 ,[Para [Str "Objective"]
  ,Para [Math DisplayMath " min \\hspace{0.5cm} \\lambda \\sum_{i=1}^{m_S} r_i + \\sum_{i=1}^{m_S} r_i \\Theta_i "]]
 ,[Para [Str "Constraints"]
  ,Para [Str "every",Space,Str "stop",Space,Str "must",Space,Str "be",Space,Str "served",Space,Str "by",Space,Str "at",Space,Str "least",Space,Str "one",Space,Str "trip.",SoftBreak,Math DisplayMath "\\sum_{i \\in I(T_c)} r_i \\ge 1, \\forall c \\in C_S"]
  ,Para [Str "where,",Space,Str "for",Space,Str "each",Space,Str "trip",Space,Math InlineMath "i",Space,Str "in",Space,Math InlineMath "T_s",Str ",",Space,Math InlineMath "\\Theta_i = \\sum_{p:c_p \\in C_i}\n     \\theta_p^{(i)}",Str ",",Space,Str "where",Space,Math InlineMath "C_i",Space,Str "reprents",Space,Str "the",Space,Str "list",Space,Str "of",Space,Str "stops",Space,Str "served",Space,Str "by",Space,Str "the",SoftBreak,Math InlineMath "i-th",Space,Str "trip",Space,Math InlineMath "i",Str ","]
  ,Para [Math InlineMath "\\theta_p^{(i)}",Space,Str "corresponds",Space,Str "to",Space,Str "tiem",Space,Str "spent",Space,Str "by",Space,Str "student",Space,Math InlineMath "p",Space,Str "on",Space,Str "the",Space,Str "bus",Space,Str "druing",SoftBreak,Str "trip",Space,Math InlineMath "i",Str "."]
  ,Para [Math InlineMath "\\lambda",Space,Str "controls",Space,Str "the",Space,Str "importance",Space,Str "of",Space,Str "the",Space,Str "number",Space,Str "of",Space,Str "trips",Space,Str "relative",Space,Str "to",Space,Str "the",SoftBreak,Str "total",Space,Str "time",Space,Str "students",Space,Str "on",Space,Str "the",Space,Str "bus."]
  ,Para [Str "In",Space,Str "the",Space,Str "optimal",Space,Str "solution",Space,Str "above,",Space,Str "some",Space,Str "stops",Space,Str "may",Space,Str "be",Space,Str "served",Space,Str "by",Space,Str "more",Space,Str "than",Space,Str "one",Space,Str "trip.",SoftBreak,Str "Set",Space,Str "of",Space,Str "trips",Space,Math InlineMath "T_c^{opt} \\subset T_S",Space,Str "serving",Space,Str "each",Space,Str "such",Space,Str "stop",Space,Str "c.",Space,Str "For",Space,Str "each",SoftBreak,Math InlineMath "i\\in I(T_c^{opt})",Str ",",Space,Str "we",Space,Str "compute",Space,Str "the",Space,Str "improvement",Space,Math InlineMath "\\delta_i",Space,Str "to",Space,Str "the",Space,Str "objective",SoftBreak,Str "that",Space,Str "would",Space,Str "be",Space,Str "obtained",Space,Str "by",Space,Str "removing",Space,Str "stop",Space,Math InlineMath "c",Space,Str "from",Space,Str "trip",Space,Math InlineMath "i",Str "."]]]
,Header 2 ("scenario-selection",[],[]) [Str "Scenario",Space,Str "Selection"]
,Header 3 ("node",[],[]) [Str "Node"]
,Table [] [AlignDefault,AlignDefault,AlignDefault] [0.0,0.0,0.0]
 [[Plain [Str "Type"]]
 ,[Plain [Str "Notation"]]
 ,[Plain [Str "comment"]]]
 [[[Plain [Str "depot"]]
  ,[Plain [Str "y"]]
  ,[]]
 ,[[Plain [Str "trip"]]
  ,[Plain [Math InlineMath "\\rho_{S,h,R}"]]
  ,[Plain [Str "for",Space,Str "each",Space,Str "school",Space,Str "S,",Space,Str "and",Space,Str "routing",Space,Str "scenario",Space,Math InlineMath "1 \\le h \\le h_S",Space,Str "and",Space,Str "each",Space,Str "trip",Space,Math InlineMath "R \\in \\mathcal{T}_S^h"]]]
 ,[[Plain [Str "available",Space,Str "node"]]
  ,[Plain [Math InlineMath "a_{S,h}"]]
  ,[Plain [Str "for",Space,Str "each",Space,Str "school",Space,Str "S,",Space,Str "and",Space,Str "routing",Space,Str "scenario",Space,Math InlineMath "1 \\le h \\le h_S"]]]]
,Para [Str "The",Space,Str "set",Space,Str "of",Space,Str "arcs",Space,Str "includes",Space,Str "an",Space,Str "arc",Space,Str "from",Space,Str "depot",Space,Str "to",Space,Str "trip;",Space,Str "trip",Space,Str "to",Space,Str "corresponding",SoftBreak,Str "available",Space,Str "node;",Space,Str "from",Space,Str "available",Space,Str "node",Space,Str "back",Space,Str "to",Space,Str "the",Space,Str "depot."]
,Para [Str "Also,",Space,Str "an",Space,Str "arc",Space,Str "from",Space,Str "each",Space,Str "available",Space,Str "node",Space,Str "to",Space,Str "each",Space,Str "trip",Space,Str "node",Space,Str "where",Space,Str "trip",Space,Math InlineMath "R' \\in\n\\mathcal{T}_{S'}^{h'}",Space,Str "is",Space,Str "compatible",Space,Str "with",Space,Str "the",Space,Str "a",Space,Str "bus",Space,Str "staring",Space,Str "from",Space,Str "school",Space,Str "S.",SoftBreak,Math InlineMath "\\tau_S + t_S^{drop-off} + t_{S, c_{R'}^{start}, \\tau_S}^{drive} + \\mathcal{T}_R \\le \\tau_{S'}"]
,Para [Str "For",Space,Str "a",Space,Str "note",Space,Math InlineMath "i \\in \\mathcal{N}, let \\hspace{0.1cm} \\mathcal{I}{(i)} \\subseteq \\mathcal{N}",Space,Str "be",Space,Str "the",SoftBreak,Str "in-neighborhood",Space,Str "of",Space,Str "the",Space,Str "node",Space,Str "i,",Space,Str "and",Space,Math InlineMath "\\mathcal{O}{(i)} \\subseteq \\mathcal{N}"]
,Header 3 ("variable-2",[],[]) [Str "Variable"]
,Para [Str "integer",Space,Str "flow",Space,Str "variables",Space,Math InlineMath "f_i^j",Space,Str "for",Space,Str "each",Space,Str "arc(i,j)."]
,Header 3 ("objective-1",[],[]) [Str "Objective"]
,Para [Str "Minimize",Space,Str "the",Space,Str "total",Space,Str "number",Space,Str "of",Space,Str "buses",Space,Str "corresponds",Space,Str "to",Space,Str "minimizing",Space,Str "the",Space,Str "total",Space,Str "flow",SoftBreak,Str "out",Space,Str "of",Space,Str "the",Space,Str "yard",Space,Str "node",Space,Str "y.",SoftBreak,Math DisplayMath " minimize \\sum_{s \\in S}\\sum_{h=1}^{h_S}\\sum_{R \\in \\mathcal{T}_S^h}f_y^{\\rho_{S,h,R}}"]
,Header 3 ("constraints-1",[],[]) [Str "Constraints"]
,OrderedList (1,DefaultStyle,DefaultDelim)
 [[Plain [Str "flows",Space,Str "along",Space,Str "all",Space,Str "arcs",Space,Str "must",Space,Str "be",Space,Str "integral."]]
 ,[Plain [Math DisplayMath "\\mathcal{Z}_{S,h} \\in \\{0,1\\}, \\forall S \\in S, 1 \\le h \\le h_S"]]
 ,[Plain [Math DisplayMath "\\sum_{h=1}^{h_S}Z_{S,h} = 1"]]]
,Para [Str "The",Space,Str "binary",Space,Str "variable",Space,Math InlineMath "Z_{S,h}",Space,Str "is",Space,Str "1",Space,Str "if",Space,Math InlineMath "\\mathcal{T}_S^h",Space,Str "is",Space,Str "the",Space,Str "selected",Space,Str "set",SoftBreak,Str "of",Space,Str "trips",Space,Str "for",Space,Str "school",Space,Str "S.",Space,Math InlineMath "3",Str ".",Space,Str "exactly",Space,Str "one",Space,Str "set",Space,Str "of",Space,Str "trips",Space,Str "/",Space,Str "one",Space,Str "scenario",Space,Str "is",SoftBreak,Str "selected",Space,Str "for",Space,Str "each",Space,Str "school."]]
